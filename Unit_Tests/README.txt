
# Link Model Test

Steps to run tests. LinkModelRunner class implements main function for executing code.

---

## 1. Project Structure

The project is organized as follows:


link-model-test/
├── pom.xml                      # Maven configuration file
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/
│   │   │       └── aviva/
│   │   │           └── aem/
│   │   │               └── test/
│   │   │                   └── models/
│   │   │                       ├── LinkModel.java       # Main class
│   │   │                       └── LinkModelRunner.java # Main runner
│   └── test/
│       ├── java/
│       │   └── com/
│       │       └── aviva/
│       │           └── aem/
│       │               └── test/
│       │                   └── models/
│       │                       └── LinkModelTest.java  # Unit tests
└── target/                      # Output folder generated by Maven (after build)


---

## 2. Commands to Create the Project Structure

Run the following commands to create the required directory structure:


# Navigate to the root folder
mkdir -p link-model-test
cd link-model-test

# Create directories for main source code
mkdir -p src/main/java/com/aviva/aem/test/models

# Create directories for test source code
mkdir -p src/test/java/com/aviva/aem/test/models


---

## 3. Commands to Copy the Java Files

Place the provided Java files (`LinkModel.java`, `LinkModelRunner.java`, and `LinkModelTest.java`) into their respective directories:


# Copy LinkModel.java to the main models directory
cp /path/to/LinkModel.java src/main/java/com/aviva/aem/test/models/

# Copy LinkModelRunner.java to the main models directory
cp /path/to/LinkModelRunner.java src/main/java/com/aviva/aem/test/models/

# Copy LinkModelTest.java to the test models directory
cp /path/to/LinkModelTest.java src/test/java/com/aviva/aem/test/models/


Replace `/path/to/` with the actual path where the Java files are located.

---

## 4. Commands to Run the Main Runner and Tests

### **Running the Main Runner**

The `LinkModelRunner` contains the `main()` method for execution. Use the Maven `exec` plugin to run it.

1. Add the Maven `exec` plugin to `pom.xml` (if not already present):

xml
<build>
    <plugins>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
        </plugin>
    </plugins>
</build>


2. Run the `LinkModelRunner` class:


mvn clean compile # Compile the project
mvn exec:java -Dexec.mainClass="com.aviva.aem.test.models.LinkModelRunner"


### **Running the Unit Tests**

Run the tests in `LinkModelTest.java` using Maven:

1. Run all tests:


mvn clean test


2. Run a specific test:


mvn -Dtest=LinkModelTest#testGetTitle_WithNavigationTitle test


---


